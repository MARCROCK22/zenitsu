/*const Discord = require('discord.js-light');
const ms = require('ms');*/

module.exports = async (client, reaction, user) => {

    if (!reaction.message.channel.guild) return;
    if (user.bot) return;
    let message = reaction.message;
    let guild = message.guild;
    //let channel = message.channel;
    let emoji = reaction.emoji;
    let member = guild.member(user);

    let { idMessage } = await client.getData({ id: guild.id }, 'muteid');

    if (!idMessage || idMessage === 'id') return;

    if (message.id != idMessage) return;

    //console.log(member.voice.channel)

    if (emoji.id === '751908729930121376') {

        /*if (cooldownR.has(user.id)) {
            return response('Estas en cooldown de 3s!', user).catch(a => { })
        }*/

        let canalVoz = member.voice.channel;

        /*cooldownR.add(user.id);
        setTimeout(() => {
            cooldownR.delete(user.id)
        }, ms('3s'))*/

        //unmute
        await client.among(reaction.message, member, canalVoz, user, false)//
        await reaction.users.remove(user).catch(() => { })
    }

    else if (emoji.id === '751908729624068226') {

        /*if (cooldownR.has(user.id)) {
            return response('Estas en cooldown de 3s!', user).catch(a => { })
        }*/
        let canalVoz = member.voice.channel;

        /*cooldownR.add(user.id);
        setTimeout(() => {
            cooldownR.delete(user.id)
        }, ms('3s'))*/
        //mute
        await client.among(reaction.message, member, canalVoz, user, true)//
        await reaction.users.remove(user).catch(() => { })
    }

}

/*
client.among = (mensaje, member, canalVoz, canalText, bol) => {
	let message = mensaje;

	if (!canalVoz) return response('Tienes que estar en un canal de voz!', canalText);

	if (!canalVoz.name.includes('Among Us')) return response('Tienes que estar en el canal llamado: `Among Us`', canalText);

	if (!message.guild.me.hasPermission('MANAGE_CHANNELS') || !member.voice.channel.permissionsFor(client.user).has("MANAGE_CHANNELS")) return response('Tengo que tener el permiso `MANAGE_CHANNELS`!', canalText);

	let rol = message.guild.roles.cache.find(a => a.name === 'Among Us manager');

	if (!rol) {
		message.guild.roles.create({ data: { name: 'Among Us manager' } });
	}

	if (!rol || !member.roles.cache.has(rol.id)) return response('Tienes que tener el rol llamado: `Among Us manager`!', canalText);

	if (!message.guild.me.hasPermission('MUTE_MEMBERS') || !member.voice.channel.permissionsFor(client.user).has("MUTE_MEMBERS")) return response('Tengo que tener el permiso `MUTE_MEMBERS`!', canalText);

	if (!message.guild.me.hasPermission('MANAGE_MESSAGES') || !member.voice.channel.permissionsFor(client.user).has("MANAGE_MESSAGES")) return response('Tengo que tener el permiso `MANAGE_MESSAGES`!', canalText);

	if (canalVoz.userLimit != 10) {
		canalVoz.edit({ userLimit: 10 })
	}
	if (canalVoz.members.size > 15) return response('Hay mÃ¡s de 15 miembros en el canal!', canalText);

	let p = canalVoz.members.map(a => {
		a.voice.setMute(bol)
	});

	response('<a:cargando:804396706354954250> En proceso!', canalText).then(async (msg) => {
		//msg.delete({ timeout: 5000 })
		let embed = new Discord.MessageEmbed()
			.setColor(client.color)
			.setTimestamp()
			.setDescription('Listo!')

		await Promise.all(p);

		msg.edit({ embed: embed }).then(a => { a.delete({ timeout: 5000 }).catch(() => { }) })
		//message.delete({ timeout: 5000 });
	});

}

function response(d, c) {
	let color = client.color;
	let embed = new Discord.MessageEmbed()
		.setTimestamp()
		.setDescription(d)
		.setColor(color)
	return c.send({ embed: embed })
}
*/